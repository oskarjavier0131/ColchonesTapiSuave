from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from tienda.models import Categoria, Producto, Testimonio, Marca

class Command(BaseCommand):
    help = 'Configurar datos iniciales para producci√≥n'
    
    def handle(self, *args, **options):
        self.stdout.write('üöÄ Configurando datos iniciales...')
        
        # Crear superusuario con tus credenciales
        if not User.objects.filter(username='jhon_martinez').exists():
            User.objects.create_superuser(
                username='jhon_martinez',
                email='jhon.martinez@colchonestapisuave.com',
                password='estefania1'
            )
            self.stdout.write('‚úÖ Superusuario creado: jhon_martinez / estefania1')
        
        # Crear marca principal
        marca, created = Marca.objects.get_or_create(
            nombre='TapiSuave',
            defaults={
                'descripcion': 'Marca l√≠der en colchones de alta calidad',
                'activa': True
            }
        )
        if created:
            self.stdout.write(f'‚úÖ Marca: {marca.nombre}')
        
        # Crear categor√≠as (usando nombre como filtro para evitar duplicados)
        categorias_data = [
            {'nombre': 'Colchones Individuales', 'slug': 'individuales'},
            {'nombre': 'Colchones Dobles', 'slug': 'dobles'},
            {'nombre': 'Colchones Queen', 'slug': 'queen'},
            {'nombre': 'Colchones King', 'slug': 'king'},
        ]
        
        for cat_data in categorias_data:
            categoria, created = Categoria.objects.get_or_create(
                nombre=cat_data['nombre'],  # Usar nombre como filtro
                defaults={
                    'slug': cat_data['slug'],
                    'descripcion': f'Colchones {cat_data["nombre"].lower()}',
                    'activa': True
                }
            )
            if created:
                self.stdout.write(f'‚úÖ Categor√≠a: {categoria.nombre}')
        
        # Crear productos de ejemplo
        if not Producto.objects.exists():
            productos_data = [
                {
                    'nombre': 'Colch√≥n TapiSuave Classic Individual',
                    'slug': 'colchon-tapisuave-classic-individual',
                    'categoria': 'Colchones Individuales',
                    'descripcion_corta': 'Colch√≥n individual de alta calidad',
                    'descripcion': 'Colch√≥n individual de alta calidad con tecnolog√≠a de espuma viscoel√°stica para un descanso reparador.',
                    'precio': 299000,
                    'tamano': 'sencillo',
                    'firmeza': 'medio',
                    'altura': 20,
                    'material_principal': 'Espuma viscoel√°stica',
                    'garantia_anos': 5,
                    'peso': 15.5,
                    'stock': 10
                },
                {
                    'nombre': 'Colch√≥n TapiSuave Premium Doble',
                    'slug': 'colchon-tapisuave-premium-doble',
                    'categoria': 'Colchones Dobles',
                    'descripcion_corta': 'Colch√≥n doble premium con resortes',
                    'descripcion': 'Colch√≥n doble premium con sistema de resortes independientes y capa de gel refrescante.',
                    'precio': 499000,
                    'tamano': 'doble',
                    'firmeza': 'medio',
                    'altura': 25,
                    'material_principal': 'Resortes independientes + Gel',
                    'garantia_anos': 7,
                    'peso': 25.0,
                    'stock': 8
                },
                {
                    'nombre': 'Colch√≥n TapiSuave Deluxe Queen',
                    'slug': 'colchon-tapisuave-deluxe-queen',
                    'categoria': 'Colchones Queen',
                    'descripcion_corta': 'Colch√≥n Queen con gel refrescante',
                    'descripcion': 'Colch√≥n Queen size con tecnolog√≠a de gel refrescante y soporte ergon√≥mico avanzado.',
                    'precio': 699000,
                    'tamano': 'queen',
                    'firmeza': 'firme',
                    'altura': 30,
                    'material_principal': 'Gel refrescante + Memory foam',
                    'garantia_anos': 10,
                    'peso': 35.0,
                    'stock': 5
                },
                {
                    'nombre': 'Colch√≥n TapiSuave Royal King',
                    'slug': 'colchon-tapisuave-royal-king',
                    'categoria': 'Colchones King',
                    'descripcion_corta': 'Colch√≥n King de lujo premium',
                    'descripcion': 'Colch√≥n King size de lujo con m√∫ltiples capas de confort y tecnolog√≠a anti-√°caros.',
                    'precio': 899000,
                    'tamano': 'king',
                    'firmeza': 'medio',
                    'altura': 35,
                    'material_principal': 'M√∫ltiples capas + Anti-√°caros',
                    'garantia_anos': 12,
                    'peso': 45.0,
                    'stock': 3
                },
            ]
            
            for prod_data in productos_data:
                categoria = Categoria.objects.get(nombre=prod_data['categoria'])
                producto = Producto.objects.create(
                    nombre=prod_data['nombre'],
                    slug=prod_data['slug'],
                    categoria=categoria,
                    marca=marca,
                    descripcion_corta=prod_data['descripcion_corta'],
                    descripcion=prod_data['descripcion'],
                    precio=prod_data['precio'],
                    tamano=prod_data['tamano'],
                    firmeza=prod_data['firmeza'],
                    altura=prod_data['altura'],
                    material_principal=prod_data['material_principal'],
                    garantia_anos=prod_data['garantia_anos'],
                    peso=prod_data['peso'],
                    stock=prod_data['stock'],
                    activo=True,
                    destacado=True
                )
                self.stdout.write(f'‚úÖ Producto: {producto.nombre}')
        
        # Crear testimonios (usando los campos correctos del modelo)
        if not Testimonio.objects.exists():
            testimonios_data = [
                {
                    'nombre': 'Mar√≠a Gonz√°lez',
                    'ciudad': 'Bogot√°',
                    'comentario': 'Excelente calidad, duermo mucho mejor desde que compr√© mi colch√≥n TapiSuave. La diferencia es notable.',
                    'calificacion': 5
                },
                {
                    'nombre': 'Carlos Rodr√≠guez',
                    'ciudad': 'Medell√≠n',
                    'comentario': 'La mejor inversi√≥n para mi descanso. El colch√≥n es s√∫per c√≥modo y la atenci√≥n al cliente excelente.',
                    'calificacion': 5
                },
                {
                    'nombre': 'Ana Mart√≠nez',
                    'ciudad': 'Cali',
                    'comentario': 'Llevamos 2 a√±os con nuestro colch√≥n TapiSuave y sigue como nuevo. Totalmente recomendado.',
                    'calificacion': 5
                },
            ]
            
            for test_data in testimonios_data:
                Testimonio.objects.create(
                    nombre=test_data['nombre'],
                    ciudad=test_data['ciudad'],
                    comentario=test_data['comentario'],  # Campo correcto: 'comentario' no 'testimonio'
                    calificacion=test_data['calificacion'],
                    activo=True
                )
                self.stdout.write(f'‚úÖ Testimonio: {test_data["nombre"]}')
        
        self.stdout.write('üéâ ¬°Configuraci√≥n completada exitosamente!')
        self.stdout.write('üìù Credenciales de admin:')
        self.stdout.write('   Usuario: jhon_martinez')
        self.stdout.write('   Contrase√±a: estefania1')